This PEM file is an ASCII armoured BASE64 encoding of the BER (binary ASN.1
DER) representation of the PKCS #3 DHParameter structure which is a sequence of
two mandatory and one optional integer values: p, g and l respectively. In this
case these values were taken from interacting with a web server that tripped a
bug in the Internet.NL code, and is now used as a regression test to prevent
the accidental return of the bug in future.

See:
- ftp://ftp.rsasecurity.com/pub/pkcs/ascii/pkcs-3.asc

The OpenSSL command can be used to dump this file in DER format:
> openssl dhparam -in long_g.txt -text -noout
    DH Parameters: (1024 bit)
        prime:
            00:d6:c0:94:ad:57:f5:37:4f:68:d5:8c:7b:09:68:
            72:d9:45:ce:e1:f8:26:64:e0:59:44:21:e1:d5:e3:
            c8:e9:8b:c3:f0:a6:af:8f:92:f1:9e:3f:ef:93:37:
            b9:9b:9c:93:a0:55:d5:5a:96:e4:25:73:40:05:a6:
            8e:d4:70:40:fd:f0:0a:55:93:6e:ba:4b:93:f6:4c:
            ba:1a:00:4e:45:13:61:1c:9b:21:74:38:a7:03:a2:
            06:0c:20:38:d0:cf:aa:ff:bb:a4:8f:b9:da:c4:b2:
            45:0d:c5:8c:b0:32:0a:03:17:e2:a3:1b:44:a0:27:
            87:c6:57:fb:0c:0c:be:c1:1d
        generator:
            27:e1:ab:13:1b:6c:22:d2:59:d1:99:e9:df:8a:cb:
            b1:fe:2f:d4:46:1a:fb:7c:b3:21:d6:94:6b:02:c6:
            6a:9a:45:c0:62:d5:ff:d0:1e:47:07:5c:f7:b0:82:
            84:5e:87:e4:95:29:a6:6a:84:05:35:4d:11:48:18:
            49:33:07:83:41:c9:fa:62:7f:de:3c:2a:9a:19:5e:
            2c:ae:33:14:5c:47:bd:86:bb:cd:49:b0:12:f2:35:
            bb:c5:84:86:ce:1d:75:52:21:75:fc:7c:9e:fd:3a:
            ea:ac:06:85:5b:00:3e:65:a2:20:8d:16:e7:d8:9d:
            93:59:df:d5:e7:00:2d:e1

This PEM file was created using the Python ASN.1 library like so:

> pip3 install asn1 --user
> python3
>>> import asn1
>>> pint = int('00d6c094.....c11d', 16)
>>> gint = int('27e1ab13.....2de1', 16)
>>> encoder = asn1.Encoder()
>>> encoder.start()
>>> encoder.enter(asn1.Numbers.Sequence)
>>> encoder.write(pint, asn1.Numbers.Integer)
>>> encoder.write(gint, asn1.Numbers.Integer)
>>> encoder.leave()
>>> encoder_bytes = encoder.output()
>>> with open('long_g.der', 'wb') as f:
>>>     f.write(encoder_bytes)
>>> quit()
> openssl dhparam -inform DER -in long_g.der -outform PEM -out long_g.txt

See:
  - https://pypi.org/project/asn1/

-----BEGIN DH PARAMETERS-----
MIIBBwKBgQDWwJStV/U3T2jVjHsJaHLZRc7h+CZk4FlEIeHV48jpi8Pwpq+PkvGe
P++TN7mbnJOgVdValuQlc0AFpo7UcED98ApVk266S5P2TLoaAE5FE2EcmyF0OKcD
ogYMIDjQz6r/u6SPudrEskUNxYywMgoDF+KjG0SgJ4fGV/sMDL7BHQKBgCfhqxMb
bCLSWdGZ6d+Ky7H+L9RGGvt8syHWlGsCxmqaRcBi1f/QHkcHXPewgoReh+SVKaZq
hAU1TRFIGEkzB4NByfpif948KpoZXiyuMxRcR72Gu81JsBLyNbvFhIbOHXVSIXX8
fJ79OuqsBoVbAD5loiCNFufYnZNZ39XnAC3h
-----END DH PARAMETERS-----
