server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name tls13invalidocsp.test.nlnetlabs.tk;

    ssl_certificate /etc/ssl/certs/wildcard.test.nlnetlabs.tk.crt;
    ssl_certificate_key /etc/ssl/private/wildcard.test.nlnetlabs.tk.key;
    ssl_protocols TLSv1.3;

    # Serve an OCSP response which was fetched for a different site/certificate
    # and thus is invalid for this site/certificate. The .der file was obtained
    # using the process explained here:
    # See: https://raymii.org/s/articles/OpenSSL_Manually_Verify_a_certificate_against_an_OCSP.html
    ssl_stapling on;
    ssl_stapling_file /etc/ssl/certs/ocsp_responses/some.other.domain.der;

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;" always;

    # Respond with the correct headers to make the Internet.nl "Security
    # options" tests pass.
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "frame-ancestors; default-src https;" always;
    add_header Referrer-Policy "no-referrer" always;

    # Disable response compression otherwise the Internet.nl "HTTP Compression"
    # test fails.
    gzip off;

    ssl_early_data off;

    location / {
        root   /var/www/html;
        index  index.nginx-debian.html;
    }
}